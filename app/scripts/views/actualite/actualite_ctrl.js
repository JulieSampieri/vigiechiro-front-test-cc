// Generated by CoffeeScript 1.12.7
(function() {
  'use strict';
  angular.module('actualiteViews', ['xin_backend', 'xin_session']).directive('listMesActualitesDirective', function(Backend, session) {
    return {
      restrict: 'E',
      templateUrl: 'scripts/views/actualite/list_actualites_drt.html',
      link: function(scope, elem, attrs) {
        scope.loading = true;
        session.getIsAdminPromise().then(function(isAdmin) {
          return scope.isAdmin = isAdmin;
        });
        scope.actualites = [];
        return Backend.all('moi/actualites').getList().then(function(actualites) {
          scope.actualites = actualites.plain();
          return scope.loading = false;
        });
      }
    };
  }).directive('displayActualiteDirective', function($route, Backend, session) {
    return {
      restrict: 'E',
      templateUrl: 'scripts/views/actualite/display_actualite_drt.html',
      scope: {
        actualite: '=',
        isAdmin: '='
      },
      link: function(scope, elem, attrs) {
        session.getUserPromise().then(function(user) {
          return scope.user = user.plain();
        });
        return scope.validInscription = function(valid) {
          return Backend.one('protocoles', scope.actualite.protocole._id).get().then(function(protocole) {
            if (valid) {
              return protocole.customPUT(null, 'observateurs/' + scope.actualite.sujet._id).then(function() {
                session.refreshPromise();
                return $route.reload();
              }, function() {
                throw "Error validation inscription";
              });
            } else {
              return protocole.customDELETE('observateurs/' + scope.actualite.sujet._id).then(function() {
                session.refreshPromise();
                return $route.reload();
              }, function() {
                throw "Error validation inscription";
              });
            }
          });
        };
      }
    };
  }).directive('listActualitesValidationsDirective', function(session) {
    return {
      restrict: 'E',
      templateUrl: 'scripts/views/actualite/list_actualites_validations.html',
      controller: 'listActualitesValidationsController',
      scope: {
        type: '@',
        protocoleId: '@'
      },
      link: function(scope, elem, attrs) {
        return session.getIsAdminPromise().then(function(isAdmin) {
          return scope.isAdmin = isAdmin;
        });
      }
    };
  }).controller('listActualitesValidationsController', function($scope, $route, Backend, session) {
    $scope.$watch('protocoleId', function(value) {
      var payload;
      if (value) {
        payload = {
          protocole: value,
          type: $scope.type
        };
        return Backend.all('actualites/validations').getList(payload).then(function(actualites) {
          return $scope.actualites = actualites.plain();
        });
      }
    });
    return $scope.validInscription = function(valid) {
      return Backend.one('protocoles', $scope.actualite.protocole._id).get().then(function(protocole) {
        if (valid) {
          return protocole.customPUT(null, 'observateurs/' + $scope.actualite.sujet._id).then(function() {
            session.refreshPromise();
            return $route.reload();
          }, function() {
            throw "Error validation inscription";
          });
        } else {
          return protocole.customDELETE('observateurs/' + $scope.actualite.sujet._id).then(function() {
            session.refreshPromise();
            return $route.reload();
          }, function() {
            throw "Error validation inscription";
          });
        }
      });
    };
  });

}).call(this);
