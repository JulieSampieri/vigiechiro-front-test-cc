// Generated by CoffeeScript 1.12.7
(function() {
  'use strict';
  angular.module('xin.form', ['ui.bootstrap.datetimepicker', 'angularMoment']).directive('dateTextInputDirective', function(guid) {
    return {
      restrict: 'E',
      templateUrl: 'scripts/xin/form/date_text_input.html',
      controller: 'DateTextInputController',
      scope: {
        label: '=?',
        model: '=?',
        error: '=?'
      },
      link: function(scope, elem, attrs) {
        scope.date_id = guid();
        scope.today = false;
        if (attrs.today != null) {
          return scope.today = true;
        }
      }
    };
  }).controller('DateTextInputController', function($scope) {
    var firstChange;
    $scope.textDate = "";
    $scope.originTextDate = "";
    firstChange = false;
    $scope.onTimeSet = function(newDate, oldDate) {
      $("#dLabel_date_" + $scope.date_id).dropdown('toggle');
      return true;
    };
    $scope.$watch('model', function(value) {
      var date;
      $scope.textDate = '';
      date = null;
      if ((value != null) && value !== "") {
        date = moment(value);
      } else if ($scope.today && !firstChange) {
        date = moment();
        $scope.model = date._d;
      } else {
        firstChange = true;
        return;
      }
      $scope.textDate = date.format('DD/MM/YYYY HH:mm');
      if (!firstChange) {
        firstChange = true;
        return $scope.originTextDate = $scope.textDate;
      }
    });
    $scope.handleInputDate = function() {
      var testDate;
      $scope.error = "";
      if (($scope.textDate != null) && $scope.textDate !== "") {
        testDate = moment($scope.textDate, "DD/MM/YYYY HH:mm", true);
        if (testDate.isValid()) {
          return $scope.model = testDate._d;
        } else {
          return $scope.error = $scope.textDate + " n'est pas une date valide (jj/mm/aaaa hh:mm).";
        }
      } else {
        return $scope.model = null;
      }
    };
    return $scope.$watch('error', function(value) {
      var errorString, error_text, i, len;
      if (Array.isArray(value)) {
        error_text = "";
        for (i = 0, len = value.length; i < len; i++) {
          errorString = value[i];
          if (errorString.indexOf("Could not deserialize") > -1) {
            error_text += "Date invalide ";
          } else {
            error_text += errorString;
          }
        }
        return $scope.error = error_text;
      }
    }, true);
  });

}).call(this);
